chapter_03:

    3 types of Tests:

        UNIT TEST:
            Test one specific function on a class.
            Fake any needed database connections.
        INTEGRATION TEST:
            Just Like a unit test Except it uses the real database connection!
        FUNCTIONAL TEST:
            Write a test to programmatically command a browser.

    How much should I be testing my code??!!!!!:

        Does every function need a unit test? Does every page and every validation error of every form need a functional test? Absolutely not! That sounds worse than a raptor claw across a chalkboard!

        Especially if you're new to testing, don't worry; a few tests is way better than none. And honestly, I think many people create too many tests. I follow a simple rule; if it scares me, I test it. Too many tests take extra time, add little value, and slow you down later when they fail after you've made a minor change.

    Test-Driven Development or TDD:

        TDD breaks coding into three steps:
            First, create the test.
            Second, write the minimum amount of code to get that test to pass.
            And third, now that your tests are passing, you can safely refactor your code to make it fancier.
